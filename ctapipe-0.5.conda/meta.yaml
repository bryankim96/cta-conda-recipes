{% set data = load_setup_py_data() %}


package:
  name: ctapipe
  version: {{ data.get('version') }} # auto-fetch version from package
  

source:
  #path_url:
  # which branch/tag to use (should be a vX.X release)
  git_rev: v0.5.1
  git_url: https://github.com/cta-observatory/ctapipe.git

  
build:
  number: 1 ##{{ GIT_DESCRIBE_NUMBER }}  # adds number of commits past git_rev
   
  entry_points:
    # here must list everything in the entry_points in ctapipe's setup.py
    - ctapipe-info = ctapipe.tools.info:main
    - ctapipe-camdemo = ctapipe.tools.camdemo:main
    - ctapipe-dump-triggers = ctapipe.tools.dump_triggers:main
    - ctapipe-flow = ctapipe.flow.flow:main
    
requirements:
  build:
    # these must match the install_requires list in ctapipe's setup.py
    # they should be reduced to the minimum. They are the packages
    # needed to run python setup.py install
    - python # [py3k]
    - setuptools
    - astropy >=1.3,<=2.0
    - matplotlib
    - scikit-learn
    - scipy
    - traitlets
    - numba
    - psutil
    - tqdm
    - pytables
    - pytest-runner
    - iminuit
    - ctapipe-extra
    - pyhessio  >=2.0.1,<=3.0
    - ctapipe-extra ==0.2.9
  run:
    # these should be all packages that should be installed if ctapipe
    # is installed, so should include all necsesary dependencies
    - python # [py3k]
    - astropy >=1.3
    - cython
    - graphviz
    - iminuit
    - matplotlib >=1.3
    - numba
    - pyhessio >=2.0.1,<=3.0
    - pytables
    - pytables
    - python
    - pyzmq
    - scikit-image
    - scikit-learn
    - scipy
    - tqdm
    - traitlets
    - yaml
    - psutil
    - pytest
    - ctapipe-extra ==0.2.9
    

test:
  requires:
    - pytest
  imports:
    - ctapipe
    - ctapipe.io 
    - ctapipe.core
    - ctapipe.coordinates
    - ctapipe.instrument
    - ctapipe.visualization
    - ctapipe.tools
    - ctapipe.utils
    - ctapipe.reco
#  commands:
#    - ctapipe-info --version

about:
  home: https://github.com/cta-observatory/ctapipe
  license: BSD
  summary: "Experimental framework for CTA low-level data processing"
